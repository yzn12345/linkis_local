<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2019 WeBank
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webank.wedatasphere.linkis.udf.dao.UDFDao">
    <resultMap id="UDFResultMap" type="com.webank.wedatasphere.linkis.udf.entity.UDFInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="udf_name" property="udfName" jdbcType="VARCHAR"/>
        <result column="udf_type" property="udfType" jdbcType="INTEGER"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="register_format" property="registerFormat" jdbcType="VARCHAR"/>
        <result column="use_format" property="useFormat" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="is_expire" property="isExpire" jdbcType="TINYINT"/>
        <result column="is_shared" property="isShared" jdbcType="TINYINT"/>
        <result column="tree_id" property="treeId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="UDFInfoMap" type="com.webank.wedatasphere.linkis.udf.entity.UDFInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="udf_name" property="udfName" jdbcType="VARCHAR"/>
        <result column="udf_type" property="udfType" jdbcType="INTEGER"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="register_format" property="registerFormat" jdbcType="VARCHAR"/>
        <result column="use_format" property="useFormat" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="is_expire" property="isExpire" jdbcType="TINYINT"/>
        <result column="is_shared" property="isShared" jdbcType="TINYINT"/>
        <result column="tree_id" property="treeId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_load" property="isLoad" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="UDFManagerMap" type="com.webank.wedatasphere.linkis.udf.entity.UDFManager">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="udf_Column_List">
        id, `create_user`, `udf_name`, `udf_type`, `path`, `register_format`,`use_format`,
        `description`,`is_expire`,`is_shared`,`tree_id`,`create_time`,`update_time`
    </sql>
    <sql id="udf_info_List">
        id, `create_user`, `udf_name`, `udf_type`, `path`, `register_format`,`use_format`,
        `description`,`is_expire`,`is_shared`,`tree_id`,`create_time`,`update_time`,`is_load`
    </sql>



    <insert id="addUDF" useGeneratedKeys="true" keyProperty="id" parameterType="com.webank.wedatasphere.linkis.udf.entity.UDFInfo">
        INSERT INTO linkis_ps_udf (
        <include refid="udf_Column_List"/>
        ) VALUES (
        #{id,jdbcType=BIGINT},#{createUser,jdbcType=VARCHAR},#{udfName,jdbcType=VARCHAR},
        #{udfType,jdbcType=INTEGER},#{path,jdbcType=VARCHAR},#{registerFormat,jdbcType=VARCHAR},
        #{useFormat,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{isExpire,jdbcType=TINYINT},
        #{isShared,jdbcType=TINYINT},#{treeId,jdbcType=BIGINT},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateUDF" parameterType="com.webank.wedatasphere.linkis.udf.entity.UDFInfo">
        UPDATE linkis_ps_udf
        SET create_user=#{createUser,jdbcType=VARCHAR},
        udf_name=#{udfName,jdbcType=VARCHAR},
        udf_type=#{udfType,jdbcType=INTEGER},
        path=#{path,jdbcType=VARCHAR},
        register_format=#{registerFormat,jdbcType=VARCHAR},
        use_format=#{useFormat,jdbcType=VARCHAR},
        description=#{description,jdbcType=VARCHAR},
        is_expire=#{isExpire,jdbcType=TINYINT},
        is_shared=#{isShared,jdbcType=TINYINT},
        tree_id=#{treeId,jdbcType=BIGINT},
        update_time=#{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteUDF">
        DELETE FROM linkis_ps_udf
        where id = #{arg0} and create_user = #{arg1}
    </delete>

    <select id="getUDFById" resultMap="UDFResultMap">
        select
        <include refid="udf_Column_List"/>
        from linkis_ps_udf
        where id = #{arg0}
    </select>

    <delete id="deleteLoadInfo" >
        DELETE FROM linkis_ps_udf_user_load_info
        where udf_id = #{arg0} and user_name =  #{arg1}
    </delete>

    <insert id="addLoadInfo" >
        INSERT INTO linkis_ps_udf_user_load_info (`udf_id`,`user_name`) VALUES (#{arg0},#{arg1})
    </insert>

    <select id="getUDFSByUserName" resultMap="UDFResultMap">
        select
        <include refid="udf_Column_List"/>
        from linkis_ps_udf
        where create_user = #{arg0}
    </select>

    <select id="getUDFSByTreeIdAndUser" resultMap="UDFInfoMap">
        select
        *, 1 as is_load
        from linkis_ps_udf
        where tree_id = #{arg0} and create_user = #{arg1} and udf_type in
        <foreach collection="arg2" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>


    <select id="getUDFInfoByTreeId" resultMap="UDFInfoMap">
        select a.*,if(b.udf_id IS NULL,0,1) as is_load
        from
        (select * from linkis_ps_udf where tree_id = #{arg0} and udf_type in
        <foreach collection="arg2" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
        ) a
        left join
        (select udf_id from linkis_ps_udf_user_load_info where user_name = #{arg1}) b
        on a.id=b.udf_id;
    </select>

    <select id="getLoadedUDFs" resultMap="UDFInfoMap">
        select b.*,if(a.udf_id IS NULL,0,1) as is_load
        from
        (select udf_id from linkis_ps_udf_user_load_info where user_name = #{arg0}) a
        join
        linkis_ps_udf b
        on a.udf_id=b.id;
    </select>

    <select id="getSameSysCount" resultType="java.lang.Long" >
        select count(1) linkis_ps_udf where user_name="sys" and  udf_name=#{arg0}
    </select>

    <select id="getSameLoadCount" resultType="java.lang.Long" >
        select count(1)
        from
        (select udf_id from linkis_ps_udf_user_load_info where user_name = #{arg0}) a
        join
        linkis_ps_udf b
        on a.udf_id=b.id
		where b.udf_name=#{arg1}
    </select>

    <select id="getSameJarUDF" resultMap="UDFInfoMap">
        select b.*,if(a.udf_id IS NULL,0,1) as is_load
        from
        (select udf_id from linkis_ps_udf_user_load_info where user_name = #{arg0}) a
        join
        linkis_ps_udf b
        on a.udf_id=b.id
        where udf_type=0
        and b.path like CONCAT('%',#{arg1})
    </select>

    <select id="getSameNameCountByUser" resultType="java.lang.Long" >
    select
       count(1)
    from
        linkis_ps_udf
    where udf_name=#{arg0}
	and create_user in (#{arg1},'sys','bdp')
    </select>

    <select id="selectSharedUDFInfosByTreeIdAndUserName" resultMap="UDFInfoMap">
        SELECT bu.*,if(buuli.udf_id IS NULL,0,1) as is_load
        FROM linkis_ps_udf_shared_user busu
        JOIN linkis_ps_udf bu  on bu.id = busu.udf_id
		LEFT JOIN linkis_ps_udf_user_load_info buuli on  buuli.udf_id =bu.id and buuli.user_name=#{userName}
        where busu.user_name =#{userName} and tree_id=#{TreeId} and bu.udf_type in
        <foreach collection="categoryCodes" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>

    <select id="selectUDFManager" resultMap="UDFManagerMap" >
        SELECT user_name
        from linkis_ps_udf_manager
        where user_name=#{userName}
    </select>

    <select id="selectAllUser" resultType="String">
        SELECT username from linkis_user
    </select>

    <select id="getShareSameNameCountByUser" resultType="Long">
        SELECT COUNT(1)
        FROM linkis_ps_udf_shared_user busu
        JOIN linkis_ps_udf bu
        on busu.udf_id = bu.id
        where bu.udf_name=#{udfName}
    </select>

    <insert id="insertUDFSharedUser">
        INSERT into linkis_ps_udf_shared_user(udf_id,user_name)
        VALUES (#{udfId},#{shareUserName})
    </insert>

    <update id="updateUDFIsShared">
        UPDATE linkis_ps_udf
        SET is_shared=#{isShared}
        where id=#{id}
    </update>

    <select id="selectAllShareUDFInfoIdByUDFId" resultType="Long">
        SELECT id
        FROM linkis_ps_udf
        where create_user =#{userName} and udf_name=#{udfName}
        and id in (select udf_id from linkis_ps_udf_shared_user where user_name = #{userName})
    </select>

    <update id="updateSharedUDFInfoExpire">
        UPDATE linkis_ps_udf set is_expire = true where id=#{shareUDFId}
    </update>

    <select id="selectAllShareUsersByUDFIdAndUseName" resultType="String">
        SELECT busu.user_name
        FROM linkis_ps_udf_shared_user busu
        JOIN linkis_ps_udf bu
        on busu.udf_id = bu.id
        where bu.is_expire = false  and bu.udf_name=#{udfName}
    </select>

    <select id="selectIdByUserName" resultType="Long">
        SELECT id
        FROM linkis_user
        where username =#{userName}
    </select>

    <insert id="insertSharedUser">
        insert into linkis_ps_udf_shared_user(udf_id,user_name)
        VALUES (#{udfId},#{addSharedUser})
    </insert>

    <delete id="deleteAllSharedUser">
        DELETE from linkis_ps_udf_shared_user where udf_id =#{udfId}
    </delete>

    <delete id="deleteSharedUser">
        DELETE from linkis_ps_udf_shared_user where udf_id =#{udfId} and user_name=#{removeSharedUser}
    </delete>

</mapper>